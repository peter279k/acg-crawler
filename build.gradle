/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'lee' at '2017/3/3 上午 2:57' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the tomcat to add support for tomcat
apply plugin: 'tomcat'
buildscript {
    repositories {
        jcenter()
    }
 
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
	compile 'com.squareup.okhttp3:okhttp:3.6.0'
	compile 'org.jsoup:jsoup:1.10.2'
	// https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
	compile 'org.xerial:sqlite-jdbc:3.8.11.2'
	compile 'javax.mail:mail:1.4.7'
	compile 'javax.mail:javax.mail-api:1.5.5'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    
    // tomcat dependencies
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    def tomcatVersion = '7.0.11'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
    
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-web
	compile group: 'org.springframework.security', name: 'spring-security-web', version: '4.2.2.RELEASE'
    
    // https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.1.0.RELEASE'
	
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'

	// https://mvnrepository.com/artifact/net.sargue/mailgun
	compile group: 'net.sargue', name: 'mailgun', version: '1.3.2'
}

tomcatRunWar {
    httpPort = 8080
    stopPort = 8191
}

